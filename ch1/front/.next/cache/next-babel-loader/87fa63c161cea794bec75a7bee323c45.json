{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\hotb\\\\study\\\\mumu-bird\\\\ch1\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Checkbox, Button, Input } from 'antd';\n\nvar Signup = function Signup() {\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      passwordError = _useState3[0],\n      setPasswordError = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1]; //custom hook for onChange handler\n\n\n  var useInput = function useInput() {\n    var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState5 = useState(initValue),\n        value = _useState5[0],\n        setter = _useState5[1];\n\n    var handler = useCallback(function (e) {\n      //이벤트 리스너들은 특정 컴포넌트 안에 들어가 있는데, 자식 컴포넌트에 전달하는 함수들 => prop으로 넘겨주는 함수들은 useCallback으로 감싸줘야 함.  \n      //useState때문에 return부분이 다시 실행되고 새로운 함수를 생성하게 되면서 의도치 않은 리랜더링이 발생됨.\n      setter(e.target.value);\n    }, []);\n    return [value, handler];\n  }; //Hook은 함수, 조건문, 반복문 안에는 넣지 말기\n\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]); //함수 안에서 사용하는 state를 deps(디펜던시) array안에 넣어주어야 함.\n\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }); //함수 안에서 사용하는 state 없을때는 [] 생략\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"ID\"), __jsx(Input, {\n    name: \"user-id\",\n    required: true,\n    value: id,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Nick name\"), __jsx(Input, {\n    name: \"user-nick\",\n    required: true,\n    value: nick,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Password\"), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Check Password\"), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Password is not matched.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"agree with terms\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Please check agree.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Join\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/hotb/study/mumu-bird/ch1/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Checkbox","Button","Input","Signup","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","useInput","initValue","value","setter","handler","e","target","id","onChangeId","nick","onChangeNick","password","onChangePassword","onSubmit","preventDefault","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport { Form, Checkbox, Button, Input } from 'antd'\r\n\r\nconst Signup = () => {\r\n  const [passwordCheck, setPasswordCheck] = useState('')\r\n  const [term, setTerm] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n  const [termError, setTermError] = useState(false)\r\n\r\n  //custom hook for onChange handler\r\n  const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue)\r\n    const handler = useCallback((e) => {\r\n      //이벤트 리스너들은 특정 컴포넌트 안에 들어가 있는데, 자식 컴포넌트에 전달하는 함수들 => prop으로 넘겨주는 함수들은 useCallback으로 감싸줘야 함.  \r\n      //useState때문에 return부분이 다시 실행되고 새로운 함수를 생성하게 되면서 의도치 않은 리랜더링이 발생됨.\r\n      setter(e.target.value)\r\n    }, [])\r\n    return [value, handler]\r\n  }\r\n  //Hook은 함수, 조건문, 반복문 안에는 넣지 말기\r\n  const [id, onChangeId] = useInput('')\r\n  const [nick, onChangeNick] = useInput('')\r\n  const [password, onChangePassword] = useInput('')\r\n\r\n  const onSubmit = useCallback((e) => {\r\n    e.preventDefault()\r\n    if (password !== passwordCheck) {\r\n      return setPasswordError(true)\r\n    }\r\n    if (!term) {\r\n      return setTermError(true)\r\n    }\r\n  }, [password, passwordCheck, term])\r\n\r\n  const onChangePasswordCheck = useCallback((e) => {\r\n    setPasswordError(e.target.value !== password)\r\n    setPasswordCheck(e.target.value)\r\n  }, [password]) //함수 안에서 사용하는 state를 deps(디펜던시) array안에 넣어주어야 함.\r\n\r\n  const onChangeTerm = useCallback((e) => {\r\n    setTermError(false)\r\n    setTerm(e.target.checked)\r\n  }) //함수 안에서 사용하는 state 없을때는 [] 생략\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit} style={{ padding: 20 }}>\r\n        <div>\r\n          <label htmlFor='user-id'>ID</label>\r\n          <Input name='user-id' required value={id} onChange={onChangeId} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-nick'>Nick name</label>\r\n          <Input name='user-nick' required value={nick} onChange={onChangeNick} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-password'>Password</label>\r\n          <Input name='user-password' type='password' value={password} required onChange={onChangePassword} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='user-password-check'>Check Password</label>\r\n          <Input name='user-password-check' type='password' value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n          {passwordError && <div style={{ color: 'red' }}>Password is not matched.</div>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name='user-term' checked={term} onChange={onChangeTerm}>agree with terms</Checkbox>\r\n          {termError && <div style={{ color: 'red' }}>Please check agree.</div>}\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          <Button type='primary' htmlType='submit'>Join</Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}